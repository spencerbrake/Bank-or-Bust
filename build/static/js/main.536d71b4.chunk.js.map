{"version":3,"sources":["utils/tokenService.js","services/bet-api.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/AddBetForm/AddBetForm.jsx","components/BetListItem/BetListItem.jsx","pages/MyBetsPage/MyBetsPage.jsx","components/BetListItem/BetHistoryListItem.jsx","pages/BetHistoryPage/BetHistoryPage.jsx","components/FilterForm/FilterForm.jsx","components/NavBar/NavBar.jsx","pages/UpdateBetPage/UpdateBetPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["setToken","token","localStorage","setItem","getToken","getUserFromToken","JSON","parse","atob","split","user","removeToken","removeItem","getItem","exp","Date","now","BASE_URL","create","bet","fetch","method","headers","tokenService","body","stringify","then","res","json","deleteOne","id","update","_id","signup","Headers","ok","Error","getUser","logout","login","creds","SignupForm","state","name","email","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","history","push","message","this","className","onSubmit","type","placeholder","onChange","disabled","isFormInvalid","to","Component","SignupPage","msg","LoginPage","pw","alert","AddBetForm","invalidForm","formData","game","team","odds","amount","formRef","React","createRef","b","handleAddBet","current","checkValidity","console","log","ref","required","BetListItem","handleUpdateBet","selected","MyBetsPage","showAddBet","bets","filter","result","reduce","total","arr","count","forEach","pendingWagers","scope","map","BetHistoryListItem","onClick","handleDeleteBet","BetHistoryPage","useState","setBets","useEffect","win","loss","ele","performance","totalWagers","NavBar","nav","exact","handleLogout","UpdateBetPage","location","App","newBetData","betAPI","newBet","updatedBetData","updatedBet","newBetArray","path","render","updateFilterForm","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"2XAAe,G,MAAA,CACbA,SA4BF,SAAkBC,GAChBC,aAAaC,QAAQ,QAASF,IA5B9BG,WACAC,iBAQF,WACE,IAAMJ,EAAQG,IACd,OAAOH,EAAQK,KAAKC,MAAMC,KAAKP,EAAMQ,MAAM,KAAK,KAAKC,KAAO,MAT5DC,YAGF,WACET,aAAaU,WAAW,YAQ1B,SAASR,IACP,IAAIH,EAAQC,aAAaW,QAAQ,SAC7BZ,IAEcK,KAAKC,MAAMC,KAAKP,EAAMQ,MAAM,KAAK,KACrCK,IAAMC,KAAKC,MAAQ,MAC7Bd,aAAaU,WAAW,SACxBX,EAAQ,OAGZ,OAAOA,ECxBT,IAAMgB,EAAW,YASV,SAASC,EAAOC,GACnB,OAAOC,MAAMH,EAAU,CACnBI,OAAQ,OACRC,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYC,EAAanB,YACxFoB,KAAMlB,KAAKmB,UAAUN,KACtBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGhB,SAASC,EAAUC,GACtB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,YAAgBa,GAAM,CAC9BT,OAAQ,WACTK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGhB,SAASG,EAAOZ,GACnB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,YAAgBE,EAAIa,KAAO,CACnCX,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BE,KAAMlB,KAAKmB,UAAUN,KACtBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,oBCUR,OACbK,OArCF,SAAgBvB,GACd,OAAOU,MAAMH,oBAAqB,CAChCI,OAAQ,OACRC,QAAS,IAAIY,QAAQ,CAAC,eAAgB,qBACtCV,KAAMlB,KAAKmB,UAAUf,KAEtBgB,MAAK,SAAAC,GACJ,GAAIA,EAAIQ,GAAI,OAAOR,EAAIC,OAEvB,MAAM,IAAIQ,MAAM,2BAEjBV,MAAK,gBAAEzB,EAAF,EAAEA,MAAF,OAAasB,EAAavB,SAASC,OA2BzCoC,QAxBF,WACE,OAAOd,EAAalB,oBAwBpBiC,OArBF,WACEf,EAAaZ,eAqBb4B,MAlBF,SAAeC,GACb,OAAOpB,MAAMH,mBAAoB,CAC/BI,OAAQ,OACRC,QAAS,IAAIY,QAAQ,CAAC,eAAgB,qBACtCV,KAAMlB,KAAKmB,UAAUe,KAEtBd,MAAK,SAAAC,GACJ,GAAIA,EAAIQ,GAAI,OAAOR,EAAIC,OAEvB,MAAM,IAAIQ,MAAM,uBAEjBV,MAAK,gBAAEzB,EAAF,EAAEA,MAAF,OAAasB,EAAavB,SAASC,Q,OCsCxBwC,E,4MArEfC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAGhBC,aAAe,SAACC,GACd,EAAKC,MAAMC,cAAc,IACzB,EAAKC,SAAL,eAEGH,EAAEI,OAAOT,KAAOK,EAAEI,OAAOC,S,EAI9BC,a,uCAAe,WAAON,GAAP,SAAAO,EAAA,6DACXP,EAAEQ,iBADS,kBAGHC,EAAYxB,OAAO,EAAKS,OAHrB,OAIT,EAAKO,MAAMS,sBAEX,EAAKT,MAAMU,QAAQC,KAAK,KANf,gDAST,EAAKX,MAAMC,cAAc,KAAIW,SATpB,yD,yGAab,WACE,QAASC,KAAKpB,MAAMC,MAAQmB,KAAKpB,MAAME,OAASkB,KAAKpB,MAAMG,WAAaiB,KAAKpB,MAAMI,gB,oBAGrF,WACE,OACE,gCACE,uBACA,uBAAMiB,UAAU,kBAAkBC,SAAUF,KAAKR,aAAjD,UACE,qBAAKS,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,OAAOb,MAAOS,KAAKpB,MAAMC,KAAMA,KAAK,OAAOwB,SAAUL,KAAKf,mBAGtH,qBAAKgB,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOE,KAAK,QAAQF,UAAU,eAAeG,YAAY,QAAQb,MAAOS,KAAKpB,MAAME,MAAOD,KAAK,QAAQwB,SAAUL,KAAKf,mBAG1H,qBAAKgB,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,WAAWb,MAAOS,KAAKpB,MAAMG,SAAUF,KAAK,WAAWwB,SAAUL,KAAKf,mBAGtI,qBAAKgB,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,mBAAmBb,MAAOS,KAAKpB,MAAMI,aAAcH,KAAK,eAAewB,SAAUL,KAAKf,mBAGtJ,qBAAKgB,UAAU,aAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,wBAAQA,UAAU,kBAAkBK,SAAUN,KAAKO,gBAAnD,qBADF,WAEE,cAAC,IAAD,CAAMC,GAAG,IAAT,mC,GA9DOC,aCqBNC,E,kDApBf,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,cAAgB,SAACuB,GACb,EAAKtB,SAAS,CAACU,QAASY,KAJ1B,EAAK/B,MAAQ,CAACmB,QAAS,IAFN,E,0CASjB,WACE,OACE,sBAAKE,UAAU,aAAf,UAEE,cAAC,EAAD,2BAAgBD,KAAKb,OAArB,IAA4BC,cAAeY,KAAKZ,iBAChD,4BAAIY,KAAKpB,MAAMmB,iB,GAfFU,a,UCsDNG,E,4MAjDfhC,MAAQ,CACNE,MAAO,GACP+B,GAAI,I,EAGN5B,aAAe,SAACC,GAEZ,EAAKG,SAAL,eAEGH,EAAEI,OAAOT,KAAOK,EAAEI,OAAOC,S,EAI9BC,a,uCAAe,WAAON,GAAP,SAAAO,EAAA,6DACbP,EAAEQ,iBADW,kBAGLC,EAAYlB,MAAM,EAAKG,OAHlB,OAIX,EAAKO,MAAMS,sBAEX,EAAKT,MAAMU,QAAQC,KAAK,KANb,gDAUXgB,MAAM,iBAVK,yD,kGAcf,WACE,OACE,qBAAKb,UAAU,YAAf,SACE,uBAAMA,UAAU,YAAYC,SAAUF,KAAKR,aAA3C,UACE,qBAAKS,UAAU,aAAf,SACI,uBAAOE,KAAK,QAAQF,UAAU,eAAeG,YAAY,QAAQb,MAAOS,KAAKpB,MAAME,MAAOD,KAAK,QAAQwB,SAAUL,KAAKf,iBAE1H,qBAAKgB,UAAU,aAAf,SACI,uBAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,WAAWb,MAAOS,KAAKpB,MAAMiC,GAAIhC,KAAK,KAAKwB,SAAUL,KAAKf,iBAE1H,qBAAKgB,UAAU,aAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,wBAAQA,UAAU,kBAAlB,oBADF,eAEE,cAAC,IAAD,CAAMO,GAAG,IAAT,kC,GA1CMC,aC4GTM,E,4MAhHXnC,MAAQ,CACJoC,aAAa,EACbC,SAAU,CACNC,KAAM,GACNC,KAAM,GACNhB,KAAM,GACNiB,KAAM,GACNC,OAAQ,K,EAIhBC,QAAUC,IAAMC,Y,EAEhBhC,aAAe,SAAAiC,GACXA,EAAE/B,iBACF,EAAKP,MAAMuC,aAAa,EAAK9C,MAAMqC,W,EAGvChC,aAAe,SAAAwC,GACX,IAAMR,EAAQ,2BAAO,EAAKrC,MAAMqC,UAAlB,kBACbQ,EAAEnC,OAAOT,KAAO4C,EAAEnC,OAAOC,QAE1B,EAAKF,SAAS,CACV4B,WACAD,aAAc,EAAKM,QAAQK,QAAQC,kBAEvCC,QAAQC,IAAI,EAAKlD,Q,4CAGrB,WACI,OACI,mCACA,qBAAKqB,UAAU,eAAf,SACI,sBAAM8B,IAAK/B,KAAKsB,QAASpB,SAAUF,KAAKR,aAAcS,UAAU,GAAhE,SACI,gCACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASC,KAC3Bb,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,WAIpB,qBAAKH,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASE,KAC3Bd,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,cAIxB,sBAAKH,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASd,KAC3BE,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,WAIpB,qBAAKH,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASG,KAC3Bf,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,WAIpB,qBAAKH,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVpB,KAAK,SACLU,MAAOS,KAAKpB,MAAMqC,SAASI,OAC3BhB,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,gBAIxB,uBACA,qBAAKH,UAAU,cAAf,SACI,wBACIA,UAAU,mCACVE,KAAK,SACLG,SAAUN,KAAKpB,MAAMoC,YAHzB,oC,GA/FHP,aCgDVwB,E,4MA9CXrD,MAAQ,CACJqC,SAAU,EAAK9B,MAAM9B,K,EAIzBmC,aAAe,SAAAiC,GACXA,EAAE/B,iBACF,EAAKP,MAAM+C,gBAAgB,EAAKtD,MAAMqC,W,EAG1ChC,aAAe,SAAAwC,GACX,IAAMR,EAAQ,2BAAO,EAAKrC,MAAMqC,UAAlB,kBAA6BQ,EAAEnC,OAAOT,KAAO4C,EAAEnC,OAAOC,QACpE,EAAKF,SAAS,CACV4B,c,4CAKR,WACA,OACI,mCACA,+BACI,6BAAKjB,KAAKb,MAAM9B,IAAI6D,OACpB,6BAAKlB,KAAKb,MAAM9B,IAAI8D,OACpB,6BAAKnB,KAAKb,MAAM9B,IAAI8C,OACpB,6BAAKH,KAAKb,MAAM9B,IAAI+D,OACpB,mCAAMpB,KAAKb,MAAM9B,IAAIgE,UACrB,6BACI,qBAAKpB,UAAU,mBAAf,SACI,uBAAMC,SAAUF,KAAKR,aAArB,UACA,yBAAQS,UAAU,iCAAiCI,SAAUL,KAAKf,aAAcJ,KAAK,SAArF,UACY,wBAAQyB,UAAQ,EAAC6B,UAAQ,EAAzB,oBACA,yCACA,0CACA,4CAEJ,uBAPR,SAOqB,uBACb,wBAAQlC,UAAU,yBAAyBE,KAAK,SAAhD,uC,GAtCFM,aCiEX2B,G,MA/DI,SAACjD,GAEhB,IAAMkD,EAAclD,EAAMvC,KAAQ,cAAC,EAAD,CAAY8E,aAAcvC,EAAMuC,eAAkB,oBAAIzB,UAAU,YAAd,kCAWpF,OACI,qCACA,uBACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,+CAAf,SACI,2CAAa,uCAAUd,EAAMmD,KAAKC,QAAO,SAAAlF,GAAG,OAAK8B,EAAMvC,MAAQuC,EAAMvC,KAAKsB,MAAQb,EAAIT,MAAuB,QAAfS,EAAImF,QAAmC,SAAfnF,EAAImF,QAAoC,QAAfnF,EAAImF,UAAmBC,QAAO,SAACC,EAAOrF,GAAR,OAAgBqF,EAAQrF,EAAIgE,SAAQ,MAAjN,WAHZ,eAOI,qBAAKpB,UAAU,sBAAf,SACI,qBAAKA,UAAU,+CAAf,SACI,kDAAoB,iCArBxC,SAAuB0C,GACnB,IAAIC,EAAQ,EAMZ,OALAD,EAAIE,SAAQ,SAASxF,GACd8B,EAAMvC,MAAQuC,EAAMvC,KAAKsB,MAAQb,EAAIT,MAAuB,QAAfS,EAAImF,QAAmC,SAAfnF,EAAImF,QAAoC,QAAfnF,EAAImF,QACjGI,OAGDA,EAcsCE,CAAc3D,EAAMmD,kBAI7D,uBACA,qBAAKrC,UAAU,eAAf,SACKoC,IAEL,uBAAK,uBACL,qBAAKpC,UAAU,oCAAf,SACI,wBAAOA,UAAU,kCAAjB,UACI,uBAAOA,UAAU,GAAjB,SACI,+BACI,oBAAI8C,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBAKR,gCACC5D,EAAMmD,KAAKC,QAAO,SAAAlF,GAAG,OAAK8B,EAAMvC,MAAQuC,EAAMvC,KAAKsB,MAAQb,EAAIT,MAAuB,QAAfS,EAAImF,QAAmC,SAAfnF,EAAImF,QAAoC,QAAfnF,EAAImF,UAAmBQ,KAAI,SAAA3F,GAAG,OAC/I,cAAC,EAAD,CACAA,IAAKA,EAEL6E,gBAAiB/C,EAAM+C,iBADlB7E,EAAIa,oB,QC9BtB+E,MAzBf,SAA4B9D,GAExB,OACY,+BACI,6BAAKA,EAAM9B,IAAI6D,OACf,6BAAK/B,EAAM9B,IAAI8D,OACf,6BAAKhC,EAAM9B,IAAI8C,OACf,6BAAKhB,EAAM9B,IAAI+D,OACf,mCAAMjC,EAAM9B,IAAIgE,UAChB,6BAAKlC,EAAM9B,IAAImF,SACf,6BACA,wBACIvC,UAAU,uCACViD,QAAS,kBAAM/D,EAAMgE,gBAAgBhE,EAAM9B,IAAIa,MAFnD,iBAOA,2BCmELkF,GCpFU3C,Y,MDIF,SAACtB,GACpB,MAAwBkE,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KA6BA,OA3BAC,qBAAU,WACND,EAAQnE,EAAMmD,KAAKC,QAAO,SAAAlF,GAAG,MAAoB,QAAfA,EAAImF,QAAmC,SAAfnF,EAAImF,QAAoC,QAAfnF,EAAImF,aACxF,CAACrD,EAAMmD,OA0BN,qCACA,uBACI,uBACA,sBAAKrC,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,+CAAf,SACI,+CAAiB,uCA9BrC,SAAqB0C,GACjB,IAAIa,EAAM,EACNC,EAAO,EAQX,OAPAd,EAAIE,SAAQ,SAASa,GACE,QAAfA,EAAIlB,OACJgB,GAAOE,EAAIrC,OACW,SAAfqC,EAAIlB,SACXiB,GAAQC,EAAIrC,WAGbmC,EAAMC,EAoB8BE,CAAYxE,EAAMmD,gBAHzD,eAOI,qBAAKrC,UAAU,sBAAf,SACI,qBAAKA,UAAU,+CAAf,SACI,gDAAkB,iCAvBtC,SAAqB0C,GAEjB,IAAIC,EAAQ,EAMZ,OALAD,EAAIE,SAAQ,SAASa,GACC,QAAfA,EAAIlB,QAAmC,SAAfkB,EAAIlB,QAAoC,QAAfkB,EAAIlB,QACpDI,OAGDA,EAeoCgB,CAAYzE,EAAMmD,kBAKrD,uBACR,qBAAKrC,UAAU,oBAAf,SAEI,wBAAOA,UAAU,iCAAjB,UACA,uBAAOA,UAAU,GAAjB,SACI,+BACI,oBAAI8C,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBAGR,gCACCT,EAAKU,KAAI,SAAA3F,GAAG,OACL,cAAC,EAAD,CACAA,IAAKA,EAEL8F,gBAAiBhE,EAAMgE,iBADlB9F,EAAIa,eAQrB,uBACA,4BElCS2F,G,MA5CF,SAAC1E,GACZ,IAAI2E,EAAM3E,EAAMvC,KACd,+CAEE,cAAC,IAAD,CAASmH,OAAK,EAACvD,GAAG,IAAlB,qBAFF,eAME,cAAC,IAAD,CAASuD,OAAK,EAACvD,GAAG,eAAlB,yBANF,eAUE,cAAC,IAAD,CAAMA,GAAG,GAAG0C,QAAS/D,EAAM6E,aAA3B,oBAVF,wBAYE,sBAAM/D,UAAU,iBAAhB,SAAkCd,EAAMvC,KAAKiC,UAI7C,gCACI,cAAC,IAAD,CAASkF,OAAK,EAACvD,GAAG,IAAlB,qBADJ,eAKI,cAAC,IAAD,CAASuD,OAAK,EAACvD,GAAG,eAAlB,yBALJ,eASI,cAAC,IAAD,CAASuD,OAAK,EAACvD,GAAG,UAAlB,qBATJ,eAaI,cAAC,IAAD,CAASuD,OAAK,EAACvD,GAAG,SAAlB,mBAbJ,kBAmBR,OACI,qBAAKP,UAAU,SAAf,SACG6D,MCuDQG,E,4MA/FXrF,MAAQ,CACJoC,aAAa,EACbC,SAAU,EAAK9B,MAAM+E,SAAStF,MAAMvB,K,EAGxCiE,QAAUC,IAAMC,Y,EAEhBhC,aAAe,SAAAiC,GACXA,EAAE/B,iBACF,EAAKP,MAAM+C,gBAAgB,EAAKtD,MAAMqC,W,EAG1ChC,aAAe,SAAAwC,GACX,IAAMR,EAAQ,2BAAO,EAAKrC,MAAMqC,UAAlB,kBAA6BQ,EAAEnC,OAAOT,KAAO4C,EAAEnC,OAAOC,QACpE,EAAKF,SAAS,CACV4B,WACAD,aAAc,EAAKM,QAAQK,QAAQC,mB,4CAG3C,WACI,OACI,mCACI,uBAAMG,IAAK/B,KAAKsB,QAASpB,SAAUF,KAAKR,aAAcS,UAAU,WAAhE,UACI,gCACI,0BACA,uBACIA,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASC,KAC3Bb,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,YAIpB,gCACI,0BACA,uBACIH,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASE,KAC3Bd,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,YAGpB,gCACI,0BACA,uBACIH,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASd,KAC3BE,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,YAGpB,gCACI,0BACA,uBACIH,UAAU,eACVpB,KAAK,OACLU,MAAOS,KAAKpB,MAAMqC,SAASG,KAC3Bf,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,YAGpB,gCACI,0BACA,uBACIH,UAAU,eACVpB,KAAK,SACLU,MAAOS,KAAKpB,MAAMqC,SAASI,OAC3BhB,SAAUL,KAAKf,aACf+C,UAAQ,EACR5B,YAAY,cAIpB,wBACIH,UAAU,kBACVE,KAAK,SACLG,SAAUN,KAAKpB,MAAMoC,YAHzB,kC,GAjFQP,aC4Hb0D,E,4MAjHbvF,MAAQ,CACN0D,KAAM,GACN1F,KAAM+C,EAAYpB,W,EAQpBmD,a,uCAAe,WAAM0C,GAAN,eAAA3E,EAAA,6DACb2E,EAAWxH,KAAO,EAAKgC,MAAMhC,KAAKsB,IADrB,SAEQmG,EAAcD,GAFtB,OAEPE,EAFO,OAGb,EAAKjF,UAAS,SAAAT,GAAK,MAAK,CACtB0D,KAAK,GAAD,mBAAM1D,EAAM0D,MAAZ,CAAkBgC,QAExB,kBAAM,EAAKnF,MAAMU,QAAQC,KAAK,QANjB,2C,wDASfqD,gB,uCAAkB,WAAMnF,GAAN,SAAAyB,EAAA,sEACV4E,EAAiBrG,GADP,OAEhB,EAAKqB,UACH,SAAAT,GAAK,MAAK,CACR0D,KAAM1D,EAAM0D,KAAKC,QAAO,SAAAd,GAAC,OAAIA,EAAEvD,MAAQF,SAEzC,kBAAM,EAAKmB,MAAMU,QAAQC,KAAK,mBANhB,2C,wDAUlBoC,gB,uCAAkB,WAAMqC,GAAN,iBAAA9E,EAAA,sEACS4E,EAAcE,GADvB,OACVC,EADU,OAEVC,EAAc,EAAK7F,MAAM0D,KAAKU,KAAI,SAAAvB,GAAC,OACvCA,EAAEvD,MAAQsG,EAAWtG,IAAMsG,EAAa/C,KAExC,EAAKpC,SACH,CAACiD,KAAMmC,IACP,kBAAM,EAAKtF,MAAMU,QAAQC,KAAK,QAPlB,2C,wDAWlBkE,aAAe,WACbrE,EAAYnB,SACZ,EAAKa,SAAS,CAAEzC,KAAM,Q,EAGxBgD,oBAAsB,WACpB,EAAKP,SAAS,CAAEzC,KAAM+C,EAAYpB,a,8FAzCpC,4BAAAkB,EAAA,sEbbSnC,MAAMH,EAAU,CACnBI,OAAQ,MACRC,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYC,EAAanB,cAEzFsB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UaSrB,OACQwE,EADR,OAEEtC,KAAKX,SAAS,CAAEiD,KAAMA,IAFxB,gD,0EA+CA,WAAU,IAAD,OACP,OACE,sBAAKrC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,kCAGE,cAAC,EAAD,CACErD,KAAMoD,KAAKpB,MAAMhC,KACjBoH,aAAchE,KAAKgE,kBAGvB,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOD,OAAK,EAACW,KAAK,eAAeC,OAAQ,kBACrC,cAAC,EAAD,CACE/H,KAAM,EAAKgC,MAAMhC,KACjB0F,KAAM,EAAK1D,MAAM0D,KACjB0B,aAAc,EAAKA,aACnBb,gBAAiB,EAAKA,gBACtByB,iBAAkB,EAAKA,sBAI3B,cAAC,IAAD,CAAOb,OAAK,EAACW,KAAK,IAAIC,OAAQ,kBAC5B,cAAC,EAAD,CACE/H,KAAM,EAAKgC,MAAMhC,KACjB0F,KAAM,EAAK1D,MAAM0D,KACjB0B,aAAc,EAAKA,aACnBtC,aAAc,EAAKA,aACnByB,gBAAiB,EAAKA,gBACtBjB,gBAAiB,EAAKA,qBAG1B,cAAC,IAAD,CAAO6B,OAAK,EAACW,KAAK,UAAUC,OAAQ,gBAAET,EAAF,EAAEA,SAAF,OAClC,cAAC,EAAD,CACEtH,KAAM,EAAKgC,MAAMhC,KACjBsF,gBAAiB,EAAKA,gBACtBgC,SAAUA,OAId,cAAC,IAAD,CAAOH,OAAK,EAACW,KAAK,UAAUC,OAAQ,gBAAG9E,EAAH,EAAGA,QAAH,OAClC,cAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,cAAC,IAAD,CAAOmE,OAAK,EAACW,KAAK,SAASC,OAAQ,gBAAG9E,EAAH,EAAGA,QAAH,OACjC,cAAC,EAAD,CACED,oBAAqB,EAAKA,oBAC1BC,QAASA,iB,GAvGLY,aCAEoE,QACW,cAA7BC,OAAOZ,SAASa,UAEe,UAA7BD,OAAOZ,SAASa,UAEhBD,OAAOZ,SAASa,SAASC,MACvB,2DCTNC,IAASN,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,OAAQ,gBAAE9E,EAAF,EAAEA,QAAF,OAAe,cAAC,EAAD,CAAKA,QAASA,SAE9CqF,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1H,MAAK,SAAA2H,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAM3F,c","file":"static/js/main.536d71b4.chunk.js","sourcesContent":["export default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction setToken(token) {\n  localStorage.setItem('token', token);\n}","import tokenService from '../utils/tokenService';\n\nconst BASE_URL = '/api/bets';\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        method: 'GET',\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n\n    }).then(res => res.json());\n}\nexport function create(bet) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(bet)\n    }).then(res => res.json());\n}\n\nexport function deleteOne(id) {\n    return fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE'\n    }).then(res => res.json());\n}\n\nexport function update(bet) {\n    return fetch(`${BASE_URL}/${bet._id}`, {\n        method: 'PUT',\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify(bet)\n    }).then(res => res.json());\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n    state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordConf: ''\n    };\n\n    handleChange = (e) => {\n      this.props.updateMessage('');\n      this.setState({\n        // Using ES2015 Computed Property Names\n        [e.target.name]: e.target.value\n      });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await userService.signup(this.state);\n          this.props.handleSignupOrLogin();\n          // Successfully signed up - show GamePage\n          this.props.history.push('/');\n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          this.props.updateMessage(err.message);\n        }\n      }\n\n      isFormInvalid() {\n        return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n      }\n\n      render() {\n        return ( \n          <div>\n            <br/>\n            <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 text-center\">\n                  <button className=\"btn btn-primary\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n                  <Link to='/'>Cancel</Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    }\n\n    export default SignupForm;","import React, { useState, Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\n\n\nclass SignupPage extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {message: ''}\n    }\n\n    updateMessage = (msg) => {\n        this.setState({message: msg});\n      }\n\n      render() {\n        return (\n          <div className='SignupPage'>\n\n            <SignupForm {...this.props} updateMessage={this.updateMessage} />\n            <p>{this.state.message}</p>\n          </div>\n        );\n      }\n    }\n\n    export default SignupPage;\n","import React, { useState, Component } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\n\nclass LoginPage extends Component {\n\n    state = {\n      email: '',\n      pw: ''\n    };\n\n    handleChange = (e) => {\n        // Implement in an elegant way\n        this.setState({\n          // Using Computed Property Names\n          [e.target.name]: e.target.value\n        });\n      }\n\n      handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await userService.login(this.state);\n          this.props.handleSignupOrLogin();\n          // Successfully signed up - show GamePage\n          this.props.history.push('/');\n        } catch (err) {\n          // Do not alert in your projects,\n          // show a modal or some UI instead\n          alert('Invalid login');\n        }\n      }\n\n      render() {\n        return (\n          <div className=\"LoginPage\">\n            <form className=\"px-4 py-3\" onSubmit={this.handleSubmit} >\n              <div className=\"form-group\">\n                  <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"form-group\">\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 text-center\">\n                  <button className=\"btn btn-primary\">Log In</button>&nbsp;&nbsp;&nbsp;\n                  <Link to='/'>Cancel</Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    }\n\n    export default LoginPage;\n\n","import React, {Component} from 'react';\n\nclass AddBetForm extends Component {\n    state = {\n        invalidForm: true, \n        formData: {\n            game: '',\n            team: '',\n            type: '',\n            odds: '',\n            amount: ''\n        }\n    };\n\n    formRef = React.createRef();\n\n    handleSubmit = b => {\n        b.preventDefault();\n        this.props.handleAddBet(this.state.formData)\n    }\n\n    handleChange = b => {\n        const formData = {...this.state.formData,\n        [b.target.name]: b.target.value\n        };\n        this.setState({\n            formData,\n            invalidForm: !this.formRef.current.checkValidity()\n        });\n        console.log(this.state)\n    };\n\n    render() {\n        return (\n            <>\n            <div className=\"add-bet-form\">\n                <form ref={this.formRef} onSubmit={this.handleSubmit} className=\"\">\n                    <div >\n                        <div className=\"form-row\"> \n                            <div className=\"form-group col-md\">\n                                <input\n                                    className=\"form-control\"\n                                    name=\"game\"\n                                    value={this.state.formData.game}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"Game\"\n                                />\n                            </div>\n                    \n                            <div className=\"form-group col-md\">\n                                <input\n                                    className=\"form-control\"\n                                    name=\"team\"\n                                    value={this.state.formData.team}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"Team\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md\">\n                                <input\n                                    className=\"form-control\"\n                                    name=\"type\"\n                                    value={this.state.formData.type}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"Type\"\n                                />\n                            </div>\n                        \n                            <div className=\"form-group col-md\">\n                                <input\n                                    className=\"form-control\"\n                                    name=\"odds\"\n                                    value={this.state.formData.odds}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"Odds\"\n                                />\n                            </div>\n                        \n                            <div className=\"form-group col-md\">\n                                <input\n                                    className=\"form-control\"\n                                    name=\"amount\"\n                                    value={this.state.formData.amount}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"Amount\"\n                                />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"add-bet-btn\">\n                            <button \n                                className=\"btn btn-warning btn-lg btn-block\" \n                                type=\"submit\"\n                                disabled={this.state.invalidForm}\n                                >\n                                \n                                Add bet\n                                \n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            </>\n            )\n    }\n}\n\nexport default AddBetForm;","import React, {Component} from 'react';\n\n\nclass BetListItem extends Component {\n    state = { \n        formData: this.props.bet,\n\n    }\n\n    handleSubmit = b => {\n        b.preventDefault();\n        this.props.handleUpdateBet(this.state.formData);\n    };\n\n    handleChange = b => {\n        const formData = {...this.state.formData, [b.target.name]: b.target.value};\n        this.setState({\n            formData,\n        });\n    };\n\n\n    render() {\n    return (\n        <>\n        <tr>\n            <td>{this.props.bet.game}</td>\n            <td>{this.props.bet.team}</td>\n            <td>{this.props.bet.type}</td>\n            <td>{this.props.bet.odds}</td>\n            <td>${this.props.bet.amount}</td>\n            <td>\n                <div className=\"select-close-out\">\n                    <form onSubmit={this.handleSubmit}>\n                    <select className=\"custom-select custom-select-sm\" onChange={this.handleChange} name=\"result\">\n                                <option disabled selected>Select</option>\n                                <option>Win</option>\n                                <option>Loss</option>\n                                <option>Tie</option>\n                            </select>\n                            <br/> &nbsp; <br/>\n                            <button className=\"btn btn-warning btn-sm\" type=\"submit\">Close Out</button>\n                        </form>\n                    </div>\n                    </td>\n            </tr>\n        </>\n        );\n    }\n}\nexport default BetListItem;","import React from 'react';\nimport AddBetForm from '../../components/AddBetForm/AddBetForm';\nimport BetListItem from '../../components/BetListItem/BetListItem';\nimport './MyBetsPage.css';\n\nconst MyBetsPage = (props) => {\n\n    const showAddBet = (props.user) ? <AddBetForm handleAddBet={props.handleAddBet}/> : <h2 className=\"login-msg\">Login to track bets!</h2>\n\n    function pendingWagers(arr) {\n        let count = 0;\n        arr.forEach(function(bet) {\n            if(props.user && props.user._id === bet.user && bet.result !== 'Win' && bet.result !== 'Loss' && bet.result !== 'Tie') {\n                count++\n            }\n        })\n        return count \n    } \n    return (\n        <>\n        <br/>\n            <div className=\"row\">\n                <div className=\"pending-tron\">\n                    <div className=\"jumbotron text-center col-md-12 bg-secondary\">\n                        <h3>Pending: <strong>${props.bets.filter(bet => (props.user && props.user._id === bet.user && bet.result !== 'Win' && bet.result !== 'Loss' && bet.result !== 'Tie')).reduce((total, bet) => total + bet.amount, 0)}</strong> </h3>\n                    </div>\n                </div>\n            &nbsp;&nbsp;&nbsp;\n                <div className=\"pending-wagers-tron\">\n                    <div className=\"jumbotron text-center col-md-12 bg-secondary\">\n                        <h3>Pending Wagers: <strong>{pendingWagers(props.bets)}</strong></h3>\n                    </div>\n                </div>\n            </div> \n            <br/>\n            <div className=\"add-bet-form\">\n                {showAddBet}         \n            </div> \n            <br/><br/>\n            <div className=\"MyBetsPage-table table-responsive\">\n                <table className=\"table table-striped table-dark \">\n                    <thead className=\"\">\n                        <tr>\n                            <th scope=\"col\">Game</th>\n                            <th scope=\"col\">Team</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Odds</th>\n                            <th scope=\"col\">Amount</th>\n                            <th scope=\"col\">Result</th>                   \n                        </tr>\n                        \n                    </thead>\n                    \n                    <tbody>    \n                    {props.bets.filter(bet => (props.user && props.user._id === bet.user && bet.result !== 'Win' && bet.result !== 'Loss' && bet.result !== 'Tie')).map(bet => \n                            <BetListItem\n                            bet={bet}\n                            key={bet._id} \n                            handleUpdateBet={props.handleUpdateBet}  \n                            /> \n                        )}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );    \n}\n\nexport default MyBetsPage;","import React from 'react';\n\nfunction BetHistoryListItem(props) {\n\n    return (\n                <tr>\n                    <td>{props.bet.game}</td>\n                    <td>{props.bet.team}</td>\n                    <td>{props.bet.type}</td>\n                    <td>{props.bet.odds}</td>\n                    <td>${props.bet.amount}</td>\n                    <td>{props.bet.result}</td>\n                    <td>\n                    <button\n                        className=\"btn btn-sm btn-danger margin-left-10\"\n                        onClick={() => props.handleDeleteBet(props.bet._id)}\n                    >\n                        x\n                    </button>\n                    </td>\n                    <td>\n\n                    </td>\n                </tr>\n            );\n        }\n\nexport default BetHistoryListItem;","import React, { useState, useEffect} from 'react';\nimport BetHistoryListItem from '../../components/BetListItem/BetHistoryListItem';\nimport FilterForm from '../../components/FilterForm/FilterForm';\nimport './BetHistoryPage.css';\n\n\n\nconst BetHistoryPage = (props) => {\n    const [bets, setBets] = useState([])\n\n    useEffect(() => {\n        setBets(props.bets.filter(bet => (bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie')))\n    }, [props.bets])\n\n    function performance(arr) {\n        let win = 0;\n        let loss = 0;\n        arr.forEach(function(ele) {\n            if (ele.result === 'Win') {\n                win += ele.amount \n            } else if (ele.result === 'Loss') {\n                loss += ele.amount\n            }\n        })\n        return win - loss\n    }\n\n    function totalWagers(arr) {\n\n        let count = 0;\n        arr.forEach(function(ele) {\n            if(ele.result === 'Win' || ele.result === 'Loss' || ele.result === 'Tie') {\n                count++\n            }\n        })\n        return count \n    }\n    return (\n        <>\n        <br/>\n            <br/>\n            <div className=\"row\">\n                <div className=\"pending-tron\">\n                    <div className=\"jumbotron text-center col-md-12 bg-secondary\">\n                        <h3>Performance: <strong>${performance(props.bets)}</strong></h3>\n                    </div>\n                </div>    \n            &nbsp;&nbsp;&nbsp;\n                <div className=\"pending-wagers-tron\">\n                    <div className=\"jumbotron text-center col-md-12 bg-secondary\">\n                        <h3>Total Wagers: <strong>{totalWagers(props.bets)}</strong></h3>\n                    </div>\n                </div>\n            </div>\n\n                <br/>\n        <div className=\"Bet-History-table\">\n\n            <table className=\"table table-striped table-dark\">\n            <thead className=\"\">\n                <tr>\n                    <th scope=\"col\">Game</th>\n                    <th scope=\"col\">Team</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Odds</th>\n                    <th scope=\"col\">Amount</th>    \n                    <th scope=\"col\">Result</th>               \n                </tr>\n            </thead>\n            <tbody>    \n            {bets.map(bet =>  \n                    <BetHistoryListItem\n                    bet={bet}\n                    key={bet._id} \n                    handleDeleteBet={props.handleDeleteBet}\n                    /> \n                    )\n                }\n            </tbody>\n        </table>\n        </div>\n        <br/>\n        <br/>\n        </>\n    )\n}\n\nexport default BetHistoryPage;","import React, { Component } from 'react';\n\n\nclass FilterForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            betFilter: \"\",\n\n        };\n    }\n\n    updateFilterForm = (event) => {\n        this.setState({ betFilter: event.target.value})\n        console.log(event.target.value)\n    }\n\n    handleFilterSubmit = (event) => {\n        event.preventDefault()\n        let ts = Math.round(new Date().getTime() / 1000);\n        if (this.state.betFilter === 'day') {\n            let newBets = this.props.bets.filter(bet => ((bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie') && (new Date(bet.createdAt).getTime() / 1000) > (ts - (24 * 3600))))\n            this.props.setBets(newBets)\n        } else if (this.state.betFilter === 'week') {\n            let newBets = this.props.bets.filter(bet => ((bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie') && (new Date(bet.createdAt).getTime() / 1000) > (ts - ((24 * 7) * 3600))))\n            this.props.setBets(newBets)\n        } else if (this.state.betFilter === 'month') {\n            let newBets = this.props.bets.filter(bet => ((bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie') && (new Date(bet.createdAt).getTime() / 1000) > (ts - ((24 * 30) * 3600))))\n            this.props.setBets(newBets)\n        } else if (this.state.betFilter === 'year') {\n            let newBets = this.props.bets.filter(bet => ((bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie') && (new Date(bet.createdAt).getTime() / 1000) > (ts - ((24 * 365) * 3600))))\n            this.props.setBets(newBets)\n        } else if (this.state.betFilter === 'all') {\n            let newbets = this.props.bets.filter(bet => ((bet.result === 'Win' || bet.result === 'Loss' || bet.result === 'Tie')))\n            this.props.setBets(newbets)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"filter-form\">\n                    <form onSubmit={this.handleFilterSubmit} className=\"form-inline\">\n                        <select value={this.state.betFilter} className=\"custom-select custom-select-sm\" onChange={this.updateFilterForm}>\n                            <option value >Filter</option>\n                            <option value=\"day\">Day</option>\n                            <option value=\"week\">Week</option>\n                            <option value=\"month\">Month</option>\n                            <option value=\"year\">Year</option>\n                            <option value=\"all\">All</option>\n\n                        </select>\n                        &nbsp;&nbsp;&nbsp;\n                        <span>\n                            <button className=\"btn btn-warning btn-sm\" type=\"submit\">Search </button>\n                        </span>\n                    </form>\n                </div>\n        )\n    }\n}\n\nexport default FilterForm;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n      <div>\n        &nbsp;&nbsp;&nbsp;\n        <NavLink exact to='/'>\n          My Bets\n        </NavLink>\n        &nbsp;&nbsp;&nbsp;\n        <NavLink exact to='/bet-history'>\n          Bet History\n        </NavLink>\n        &nbsp;&nbsp;&nbsp;\n        <Link to='' onClick={props.handleLogout} >Logout</Link>\n        &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n        <span className='NavBar-welcome'>{props.user.name}</span>\n      </div>\n      :\n\n        <nav>\n            <NavLink exact to='/'>\n            My Bets\n            </NavLink>\n                &nbsp;&nbsp;&nbsp;\n            <NavLink exact to='/bet-history'>\n            Bet History\n            </NavLink>\n                &nbsp;&nbsp;&nbsp;\n            <NavLink exact to='/signup'>\n                Sign Up\n            </NavLink>\n                &nbsp;&nbsp;&nbsp;\n            <NavLink exact to='/login'>\n                Login\n            </NavLink>\n                &nbsp;&nbsp;&nbsp;\n        </nav>\n\nreturn (\n    <div className='NavBar'>\n      {nav}\n    </div>\n  );\n};\n\n  export default NavBar;","import React, {Component} from 'react';\n\nclass UpdateBetPage extends Component {\n    state = {\n        invalidForm: false,\n        formData: this.props.location.state.bet\n    };\n\n    formRef = React.createRef();\n\n    handleSubmit = b => {\n        b.preventDefault();\n        this.props.handleUpdateBet(this.state.formData);\n    };\n\n    handleChange = b => {\n        const formData = {...this.state.formData, [b.target.name]: b.target.value};\n        this.setState({\n            formData,\n            invalidForm: !this.formRef.current.checkValidity()\n        });\n    };\n    render() {\n        return (\n            <>\n                <form ref={this.formRef} onSubmit={this.handleSubmit} className=\"form-row\">\n                    <div>\n                        <label></label>\n                        <input\n                            className=\"form-control\"\n                            name=\"game\"\n                            value={this.state.formData.game}\n                            onChange={this.handleChange}\n                            required\n                            placeholder=\"Game\"\n                        />\n                    </div>\n\n                    <div>\n                        <label></label>\n                        <input\n                            className=\"form-control\"\n                            name=\"team\"\n                            value={this.state.formData.team}\n                            onChange={this.handleChange}\n                            required\n                            placeholder=\"Team\"\n                        />\n                    </div>\n                    <div>\n                        <label></label>\n                        <input\n                            className=\"form-control\"\n                            name=\"type\"\n                            value={this.state.formData.type}\n                            onChange={this.handleChange}\n                            required\n                            placeholder=\"Type\"\n                        />\n                    </div>\n                    <div>\n                        <label></label>\n                        <input\n                            className=\"form-control\"\n                            name=\"odds\"\n                            value={this.state.formData.odds}\n                            onChange={this.handleChange}\n                            required\n                            placeholder=\"Odds\"\n                        />\n                    </div>\n                    <div>\n                        <label></label>\n                        <input\n                            className=\"form-control\"\n                            name=\"amount\"\n                            value={this.state.formData.amount}\n                            onChange={this.handleChange}\n                            required\n                            placeholder=\"Amount\"\n                        />\n                    </div>\n\n                    <button \n                        className=\"btn btn-primary\" \n                        type=\"submit\"\n                        disabled={this.state.invalidForm}\n                        >\n\n                        Submit form\n\n                    </button>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default UpdateBetPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport * as betAPI from '../../services/bet-api'\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport MyBetsPage from '../MyBetsPage/MyBetsPage';\nimport BetHistoryPage from '../BetHistoryPage/BetHistoryPage';\nimport NavBar from '../../../src/components/NavBar/NavBar';\nimport UpdateBetPage from '../../pages/UpdateBetPage/UpdateBetPage'\n\nclass App extends Component {\n  state = {\n    bets: [],\n    user: userService.getUser()\n  };\n\n  async componentDidMount() {\n    const bets = await betAPI.getAll();\n    this.setState({ bets: bets });\n  }\n\n  handleAddBet = async newBetData => {\n    newBetData.user = this.state.user._id\n    const newBet = await betAPI.create(newBetData);\n    this.setState(state => ({\n      bets: [...state.bets, newBet]\n    }),\n    () => this.props.history.push('/'));\n  }\n\n  handleDeleteBet = async id => {\n    await betAPI.deleteOne(id);\n    this.setState(\n      state => ({\n        bets: state.bets.filter(b => b._id !== id)\n      }),\n      () => this.props.history.push('/bet-history')\n    );\n  };\n\n  handleUpdateBet = async updatedBetData => {\n    const updatedBet = await betAPI.update(updatedBetData);\n    const newBetArray = this.state.bets.map(b => \n      b._id === updatedBet._id ? updatedBet : b\n      );\n      this.setState(\n        {bets: newBetArray},\n        () => this.props.history.push('/')\n      );\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        &nbsp;&nbsp;\n          Bank or Bust\n          <NavBar\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n        </header>\n        <Switch>\n\n        <Route exact path='/bet-history' render={() =>\n            <BetHistoryPage\n              user={this.state.user}\n              bets={this.state.bets}\n              handleLogout={this.handleLogout}\n              handleDeleteBet={this.handleDeleteBet}\n              updateFilterForm={this.updateFilterForm}\n            />\n          }/>\n\n          <Route exact path='/' render={() =>\n            <MyBetsPage\n              user={this.state.user}\n              bets={this.state.bets}\n              handleLogout={this.handleLogout}\n              handleAddBet={this.handleAddBet}\n              handleDeleteBet={this.handleDeleteBet}\n              handleUpdateBet={this.handleUpdateBet}\n            />\n          }/>\n          <Route exact path='/update' render={({location}) =>\n            <UpdateBetPage \n              user={this.state.user}\n              handleUpdateBet={this.handleUpdateBet}\n              location={location}\n\n            />\n            }/>\n          <Route exact path='/signup' render={({ history }) => \n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n          <Route exact path='/login' render={({ history }) => \n            <LoginPage\n              handleSignupOrLogin={this.handleSignupOrLogin}\n              history={history}\n            />\n          }/>\n        </Switch>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router>\n    <Route render={({history}) => <App history={history} />} />\n  </Router>, \n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}